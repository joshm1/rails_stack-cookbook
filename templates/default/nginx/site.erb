<%- if @app.nginx[:cache_root] -%>
proxy_cache_path <%= @app.nginx.cache_path %> keys_zone=<%= @app.full_name %>:200m loader_threshold=200 loader_files=300 max_size=200m inactive=<%= @app.nginx[:cache_inactive] %>;
<%- end -%>

upstream <%= @app.full_name %> {
  # This is the socket we configured in the app server
  server unix:<%= @app.app_server.socket_path %> fail_timeout=0;
}

server {
  listen      <%= @app.nginx[:listen] %>;
  server_name <%= @app.nginx[:server_names] %>;

  root        <%= @app.current_dir %>/public;
  access_log  <%= @app.nginx.access_log_path %> le_json;
  error_log   <%= @app.nginx.error_log_path %>;

  error_page 500 /500.html;
  error_page 501 /501.html;
  error_page 502 /502.html;
  error_page 503 /503.html;
  error_page 504 /504.html;

  client_max_body_size <%= @app.nginx[:client_max_body_size] %>;

  # protect dotfiles
  location ~ /\. { deny all; error_log off; log_not_found off; }

  # ignore common
  location = /robots.txt  { access_log off; log_not_found off; }
  location = /favicon.ico { access_log off; log_not_found off; }

  <%- @app.nginx.fetch(:directives, []).each do |directive| -%>
  <%= directive %>
  <%- end -%>

  location / {
    try_files $uri @ruby;
  }

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location = /favicon.ico {
    expires max;
    add_header Cache-Control public;
  }

  location @ruby {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_connect_timeout <%= @app.nginx[:proxy_connect_timeout] %>;
    proxy_read_timeout <%= @app.nginx[:proxy_read_timeout] %>;
    proxy_pass http://<%= @app.full_name %>;
  }
}

<%- @app.nginx.fetch(:servers, []).each do |server| -%>
server {
  <%- server.fetch(:directives, []).each do |directive| -%>
  <%= directive %>
  <%- end -%>
}
<%- end %>
