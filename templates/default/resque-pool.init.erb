#!/bin/sh -e

### BEGIN INIT INFO
# Provides:          <%= @app.full_name %>-resque
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: resque-pool init script for <%= @app.full_name %>
# Description:       resque-pool manages the resque workers
### END INIT INFO

app_name="<%= @app.full_name %>"
pidfile="<%= @app.resque.pid_file %>"
app_dir="<%= @app.current_dir %>"
run_as_user="<%= @app.resque[:user] %>"
sleep_time_during_restart=1
stop_schedule="QUIT/30/INT/10/KILL/5"
environment="<%= @app.environment %>"
stdout_log="<%= @app.resque.init_log %>"
config_file="<%= @app.resque.config_file %>"
bundle="/usr/local/bin/bundle"

. /lib/lsb/init-functions

start_cmd () {
  echo -n "** Starting resque-pool for ${app_name}... "
  RAILS_ENV="${environment}" \
  start-stop-daemon --start --pidfile ${pidfile} \
    --chuid ${run_as_user} --chdir ${app_dir} \
    --startas ${bundle} -- exec \
    resque-pool -d -p ${pidfile} \
    -c ${config_file} -E ${environment} >> ${stdout_log} 2>&1 || true
  echo "[DONE]"
}

stop_cmd () {
  echo -n "** Stopping resque-pool from pidfile ${pidfile}... "
  start-stop-daemon --stop --pidfile ${pidfile} --retry=${stop_schedule} || true
  echo "[DONE]"
}

case "$1" in
  start)
    start_cmd
    ;;
  reload)
    start-stop-daemon --stop --pidfile ${pidfile} --signal HUP
    ;;
  graceful-stop)
    start-stop-daemon --stop --pidfile ${pidfile} --signal QUIT
    ;;
  quick-stop)
    start-stop-daemon --stop --pidfile ${pidfile} --signal INT
    ;;
  stop)
    stop_cmd
    ;;
  restart)
    stop_cmd
    sleep ${sleep_time_during_restart}
    start_cmd
    ;;
  *)
    echo "Usage: $0 {start|stop|graceful-stop|quick-stop|restart|reload}"
    exit 1
    ;;
esac

# vim:ft=sh
