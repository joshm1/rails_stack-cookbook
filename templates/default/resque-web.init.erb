#!/bin/sh -e

### BEGIN INIT INFO
# Provides:          <%= @app.full_name %>-resque-web
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: resque-web init script for <%= @app.full_name %>
# Description:       resque-web to view resque workers and queues
### END INIT INFO

pidfile="<%= @app.resque_web.pid_file  %>"
app_dir="<%= @app.current_dir %>"
run_as_user="<%= @app.resque_web[:user] %>"
sleep_time_during_restart=2
stop_schedule="QUIT/30/INT/10/KILL/5"
environment="<%= @app.environment %>"
stdout_log="<%= @app.resque_web.stdout_log %>"
init_log="<%= @app.resque_web.init_log %>"
web_port="<%= @app.resque_web[:port] %>"
bundle="/usr/local/bin/bundle"

load_file="<%= File.join(@app.current_dir, @app.resque_web[:load_file] || '') %>"
if [ ! -e "$load_file" ]; then
  load_file=""
fi

. /lib/lsb/init-functions

case "$1" in
  start)
    echo "** Starting resque-web for ${app_name}... "
    start-stop-daemon --start --pidfile ${pidfile} \
      --chuid ${run_as_user} --chdir ${app_dir} \
      --exec /bin/bash -- -c \
      "$bundle exec resque-web -e $environment --port $web_port -L $load_file -P $pidfile RAILS_ENV=$environment >> $stdout_log 2>&1" \
      >> ${init_log} 2>&1
    echo "[DONE]"
    ;;
  stop)
    echo -n "** Stopping resque-web from pidfile ${pidfile}... "
    start-stop-daemon --stop --pidfile ${pidfile} --retry=${stop_schedule}
    echo "[DONE]"
    ;;
  restart)
    $0 stop
    sleep ${sleep_time_during_restart}
    $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac

# vim: set ft=sh:
